@startuml
!include ../style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":SetPersonFileCommandParser" as SetPersonFileCommandParser LOGIC_COLOR
participant ":SetPersonFileCommand" as SetPersonFileCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "lastShownList:List<Person>" as lastShownList MODEL_COLOR
participant "editedPerson:Person" as editedPerson MODEL_COLOR
end box

[-> LogicManager : execute(commandText)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(commandText)
activate AddressBookParser

create SetPersonFileCommandParser
AddressBookParser -> SetPersonFileCommandParser
activate SetPersonFileCommandParser

SetPersonFileCommandParser --> AddressBookParser
deactivate SetPersonFileCommandParser

AddressBookParser -> SetPersonFileCommandParser : parse(arguments)
activate SetPersonFileCommandParser

create SetPersonFileCommand
SetPersonFileCommandParser -> SetPersonFileCommand : SetPersonFileCommand(index, filePath)
activate SetPersonFileCommand

SetPersonFileCommand --> SetPersonFileCommandParser
deactivate SetPersonFileCommand

SetPersonFileCommandParser --> AddressBookParser
deactivate SetPersonFileCommand

AddressBookParser --> LogicManager
deactivate AddressBookParser

destroy SetPersonFileCommandParser

LogicManager -> SetPersonFileCommand : execute()
activate SetPersonFileCommand

SetPersonFileCommand -> Model : getFilteredPersonList()
activate Model

Model --> SetPersonFileCommand : lastShownList
deactivate Model

SetPersonFileCommand -> lastShownList : get(index.getZeroBased())
activate lastShownList

lastShownList --> SetPersonFileCommand:personToEdit
deactivate lastShownList

Create editedPerson
SetPersonFileCommand -> editedPerson
activate editedPerson

editedPerson --> SetPersonFileCommand
deactivate editedPerson

SetPersonFileCommand -> Model : setPerson(personToEdit, editedPerson)
activate Model

Model --> SetPersonFileCommand
deactivate Model

SetPersonFileCommand -> Model : updateFilterPersonList()
activate Model

Model --> SetPersonFileCommand
deactivate Model

SetPersonFileCommand --> LogicManager : result
destroy SetPersonFileCommand

[<--LogicManager : result
deactivate LogicManager
@enduml
